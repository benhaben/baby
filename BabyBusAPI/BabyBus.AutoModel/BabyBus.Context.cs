//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BabyBus.AutoModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BabyBus_Entities : DbContext
    {
        public BabyBus_Entities()
            : base("name=BabyBus_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AnalysisKindergarten> AnalysisKindergarten { get; set; }
        public virtual DbSet<AnalysisParent> AnalysisParent { get; set; }
        public virtual DbSet<Answer> Answer { get; set; }
        public virtual DbSet<CardPassword> CardPassword { get; set; }
        public virtual DbSet<Checkout> Checkout { get; set; }
        public virtual DbSet<Child> Child { get; set; }
        public virtual DbSet<Favorite> Favorite { get; set; }
        public virtual DbSet<Kindergarten> Kindergarten { get; set; }
        public virtual DbSet<Notice> Notice { get; set; }
        public virtual DbSet<NoticeChildRelation> NoticeChildRelation { get; set; }
        public virtual DbSet<NoticeReaded> NoticeReaded { get; set; }
        public virtual DbSet<ParentChildRelation> ParentChildRelation { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<WeChatInfo> WeChatInfo { get; set; }
        public virtual DbSet<NoticeSummary> NoticeSummary { get; set; }
        public virtual DbSet<TeacherInUseSummary> TeacherInUseSummary { get; set; }
        public virtual DbSet<ChildParentInformationViewWithId> ChildParentInformationViewWithIds { get; set; }
        public virtual DbSet<ChildTeacherInformationViewWithId> ChildTeacherInformationViewWithIds { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Examine> Examines { get; set; }
        public virtual DbSet<AttendanceDetail> AttendanceDetails { get; set; }
        public virtual DbSet<AttendanceMaster> AttendanceMasters { get; set; }
        public virtual DbSet<AttendancePlan> AttendancePlans { get; set; }
        public virtual DbSet<Stats_ImageBug> Stats_ImageBug { get; set; }
        public virtual DbSet<Stats_PageReportDetail> Stats_PageReportDetail { get; set; }
        public virtual DbSet<Stats_PageReportMaster> Stats_PageReportMaster { get; set; }
        public virtual DbSet<Stats_UserReport> Stats_UserReport { get; set; }
        public virtual DbSet<SelectUserInformationView> SelectUserInformationViews { get; set; }
        public virtual DbSet<SelectUserInformationViewWithId> SelectUserInformationViewWithIds { get; set; }
        public virtual DbSet<UV_Child> UV_Child { get; set; }
        public virtual DbSet<UV_Class> UV_Class { get; set; }
        public virtual DbSet<UV_Teacher> UV_Teacher { get; set; }
        public virtual DbSet<UV_UserReport> UV_UserReport { get; set; }
        public virtual DbSet<Stats_DailyUserReport> Stats_DailyUserReport { get; set; }
        public virtual DbSet<Stats_DailyUserReportByClass> Stats_DailyUserReportByClass { get; set; }
        public virtual DbSet<Stats_DailyUserReportByKindergarten> Stats_DailyUserReportByKindergarten { get; set; }
        public virtual DbSet<UV_Day15Notice> UV_Day15Notice { get; set; }
        public virtual DbSet<UV_Day7Notice> UV_Day7Notice { get; set; }
        public virtual DbSet<UV_TotalNotice> UV_TotalNotice { get; set; }
        public virtual DbSet<UV_Stats_PageReportDetail> UV_Stats_PageReportDetail { get; set; }
        public virtual DbSet<UV_Stats_PageReportMaster> UV_Stats_PageReportMaster { get; set; }
        public virtual DbSet<UserKindergartenRealation> UserKindergartenRealations { get; set; }
        public virtual DbSet<ChildPay> ChildPays { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<AdvertisementSet> AdvertisementSets { get; set; }
        public virtual DbSet<IntelligenceQuestion> IntelligenceQuestions { get; set; }
        public virtual DbSet<GenderNormGroupAgeType> GenderNormGroupAgeTypes { get; set; }
        public virtual DbSet<GenderNorm> GenderNorms { get; set; }
        public virtual DbSet<IntelligenceAssessment> IntelligenceAssessments { get; set; }
        public virtual DbSet<HeightForStandardWeight> HeightForStandardWeights { get; set; }
        public virtual DbSet<IndividualIndexDistribution> IndividualIndexDistributions { get; set; }
        public virtual DbSet<AskForLeave> AskForLeaves { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Knowledge__PhysiqueHealth> Knowledge__PhysiqueHealth { get; set; }
        public virtual DbSet<MI_AssessIndex> MI_AssessIndex { get; set; }
        public virtual DbSet<MI_Modality> MI_Modality { get; set; }
        public virtual DbSet<MI_TestDetail> MI_TestDetail { get; set; }
        public virtual DbSet<MI_TestMaster> MI_TestMaster { get; set; }
        public virtual DbSet<MI_TestQuestion> MI_TestQuestion { get; set; }
        public virtual DbSet<PayOrder> PayOrders { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<PhysicalExaminationPlane> PhysicalExaminationPlanes { get; set; }
        public virtual DbSet<PhysicalExaminationResult> PhysicalExaminationResults { get; set; }
    
        public virtual ObjectResult<sp_changeChildKindergartenAndClass_Result> sp_changeChildKindergartenAndClass(string childName, string kindergartenName, string className)
        {
            var childNameParameter = childName != null ?
                new ObjectParameter("childName", childName) :
                new ObjectParameter("childName", typeof(string));
    
            var kindergartenNameParameter = kindergartenName != null ?
                new ObjectParameter("kindergartenName", kindergartenName) :
                new ObjectParameter("kindergartenName", typeof(string));
    
            var classNameParameter = className != null ?
                new ObjectParameter("className", className) :
                new ObjectParameter("className", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_changeChildKindergartenAndClass_Result>("sp_changeChildKindergartenAndClass", childNameParameter, kindergartenNameParameter, classNameParameter);
        }
    
        public virtual ObjectResult<sp_changeChildKindergartenAndClassByChildId_Result> sp_changeChildKindergartenAndClassByChildId(Nullable<int> childId, string kindergartenName, string className)
        {
            var childIdParameter = childId.HasValue ?
                new ObjectParameter("childId", childId) :
                new ObjectParameter("childId", typeof(int));
    
            var kindergartenNameParameter = kindergartenName != null ?
                new ObjectParameter("kindergartenName", kindergartenName) :
                new ObjectParameter("kindergartenName", typeof(string));
    
            var classNameParameter = className != null ?
                new ObjectParameter("className", className) :
                new ObjectParameter("className", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_changeChildKindergartenAndClassByChildId_Result>("sp_changeChildKindergartenAndClassByChildId", childIdParameter, kindergartenNameParameter, classNameParameter);
        }
    
        public virtual ObjectResult<sp_updateAnalysisKindergartenTable_Result> sp_updateAnalysisKindergartenTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateAnalysisKindergartenTable_Result>("sp_updateAnalysisKindergartenTable");
        }
    
        public virtual ObjectResult<sp_updateAnalysisParentTable_Result> sp_updateAnalysisParentTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateAnalysisParentTable_Result>("sp_updateAnalysisParentTable");
        }
    
        public virtual int UP_Attendance_DailyInit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Attendance_DailyInit");
        }
    
        public virtual int UP_Child_Delete(Nullable<int> childId)
        {
            var childIdParameter = childId.HasValue ?
                new ObjectParameter("ChildId", childId) :
                new ObjectParameter("ChildId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Child_Delete", childIdParameter);
        }
    
        public virtual int UP_Parent_Create(string loginName, Nullable<int> classId, string childName, Nullable<int> gender, Nullable<System.DateTime> birthday, string parentName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var childNameParameter = childName != null ?
                new ObjectParameter("ChildName", childName) :
                new ObjectParameter("ChildName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(int));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var parentNameParameter = parentName != null ?
                new ObjectParameter("ParentName", parentName) :
                new ObjectParameter("ParentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Parent_Create", loginNameParameter, classIdParameter, childNameParameter, genderParameter, birthdayParameter, parentNameParameter);
        }
    
        public virtual int UP_Parent_Delete(string loginName, string parentName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var parentNameParameter = parentName != null ?
                new ObjectParameter("ParentName", parentName) :
                new ObjectParameter("ParentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Parent_Delete", loginNameParameter, parentNameParameter);
        }
    
        public virtual ObjectResult<UP_Attendance_GenerateExlsInfoForKindergarten_Result> UP_Attendance_GenerateExlsInfoForKindergarten(Nullable<int> year, Nullable<int> kindergartenId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var kindergartenIdParameter = kindergartenId.HasValue ?
                new ObjectParameter("kindergartenId", kindergartenId) :
                new ObjectParameter("kindergartenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_Attendance_GenerateExlsInfoForKindergarten_Result>("UP_Attendance_GenerateExlsInfoForKindergarten", yearParameter, kindergartenIdParameter);
        }
    
        public virtual ObjectResult<UP_Attendance_GenerateExlsInfoForClass_Result> UP_Attendance_GenerateExlsInfoForClass(Nullable<int> year, Nullable<int> kindergartenId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var kindergartenIdParameter = kindergartenId.HasValue ?
                new ObjectParameter("kindergartenId", kindergartenId) :
                new ObjectParameter("kindergartenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_Attendance_GenerateExlsInfoForClass_Result>("UP_Attendance_GenerateExlsInfoForClass", yearParameter, kindergartenIdParameter);
        }
    
        public virtual int UP_Attendance_GenerateExlsInfoForChild(Nullable<int> year, Nullable<int> kindergartenId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var kindergartenIdParameter = kindergartenId.HasValue ?
                new ObjectParameter("kindergartenId", kindergartenId) :
                new ObjectParameter("kindergartenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Attendance_GenerateExlsInfoForChild", yearParameter, kindergartenIdParameter);
        }
    
        public virtual ObjectResult<UP_Attendance_GenerateExlsInfoForChild1_Result> UP_Attendance_GenerateExlsInfoForChild1(Nullable<int> year, Nullable<int> kindergartenId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var kindergartenIdParameter = kindergartenId.HasValue ?
                new ObjectParameter("kindergartenId", kindergartenId) :
                new ObjectParameter("kindergartenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_Attendance_GenerateExlsInfoForChild1_Result>("UP_Attendance_GenerateExlsInfoForChild1", yearParameter, kindergartenIdParameter);
        }
    
        public virtual int UP_Stats_CreateDailyUserReport(Nullable<System.DateTime> curDate)
        {
            var curDateParameter = curDate.HasValue ?
                new ObjectParameter("CurDate", curDate) :
                new ObjectParameter("CurDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Stats_CreateDailyUserReport", curDateParameter);
        }
    
        public virtual int UP_Stats_CreateDailyUserReportByClass(Nullable<System.DateTime> curDate)
        {
            var curDateParameter = curDate.HasValue ?
                new ObjectParameter("CurDate", curDate) :
                new ObjectParameter("CurDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Stats_CreateDailyUserReportByClass", curDateParameter);
        }
    
        public virtual int UP_Stats_CreateDailyUserReportByKindergarten(Nullable<System.DateTime> curDate)
        {
            var curDateParameter = curDate.HasValue ?
                new ObjectParameter("CurDate", curDate) :
                new ObjectParameter("CurDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Stats_CreateDailyUserReportByKindergarten", curDateParameter);
        }
    
        public virtual int UP_Attendance_GenerateExlsInfoForClassChild(Nullable<int> year, Nullable<int> inputMonth, Nullable<int> kindergartenId, Nullable<int> classId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var inputMonthParameter = inputMonth.HasValue ?
                new ObjectParameter("inputMonth", inputMonth) :
                new ObjectParameter("inputMonth", typeof(int));
    
            var kindergartenIdParameter = kindergartenId.HasValue ?
                new ObjectParameter("kindergartenId", kindergartenId) :
                new ObjectParameter("kindergartenId", typeof(int));
    
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("classId", classId) :
                new ObjectParameter("classId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_Attendance_GenerateExlsInfoForClassChild", yearParameter, inputMonthParameter, kindergartenIdParameter, classIdParameter);
        }
    }
}
